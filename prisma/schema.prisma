// Este es tu archivo de esquema de Prisma,
// puedes aprender más sobre él en la documentación: https://pris.ly/d/prisma-schema

// ¿Buscas formas de acelerar tus consultas o escalar fácilmente con tus funciones serverless o edge?
// Prueba Prisma Accelerate: https://pris.ly/cli/accelerate-init
// npx prisma migrate reset
// npx prisma migrate dev --name agregar_especialidades_abogado
// npx prisma generate

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                 Int         @id @default(autoincrement()) // ID único del usuario (autoincremental)
  first_name         String      // Nombre del usuario
  last_name          String      // Apellido del usuario
  email              String      @unique // Correo electrónico único
  phone              String?     // Número de teléfono (opcional)
  password_hash      String      // Hash de la contraseña
  role               user_role   @default(CLIENT) // Rol del usuario (cliente, abogado o admin)
  is_active          Boolean     @default(true) // Estado del usuario (activo o inactivo)

  client_detail      client_detail? // Relación con detalles de cliente (si aplica)
  lawyer_detail      lawyer_detail? // Relación con detalles de abogado (si aplica)
}

model client_detail {
  id            Int             @id @default(autoincrement()) // ID único del detalle de cliente
  user_id       Int             @unique // ID del usuario (cliente)
  consultation  consultation[]  // Relación con consultas legales realizadas por el cliente

  user          user            @relation(fields: [user_id], references: [id]) // Relación con el usuario
}

model lawyer_detail {
  id                Int             @id @default(autoincrement()) // ID único del detalle de abogado
  user_id           Int             @unique // ID del usuario (abogado)
  national_registry String          @unique // Número de registro del abogado
  specialty         String[]        // Especialidades del abogado
  consultation      consultation[]  // Relación con consultas legales en las que participa

  user              user            @relation(fields: [user_id], references: [id]) // Relación con el usuario
}

model consultation {
  id            Int             @id @default(autoincrement()) // ID único de la consulta legal
  client_id     Int             // ID del cliente asociado al caso
  lawyer_id     Int?            // ID del abogado asociado al caso (puede ser nulo si aún no se asigna)
  subject       String          // Asunto del caso legal
  message       String          // Mensaje o descripción del caso
  created_at    DateTime        @default(now()) // Fecha y hora de creación del caso
  status        String          // Estado del caso (pendiente, en proceso, cerrado, etc.)
  is_archived   Boolean         @default(false) // Indica si la consulta está archivada o no

  client_detail  client_detail?  @relation(fields: [client_id], references: [user_id]) // Relación con el cliente
  lawyer_detail  lawyer_detail?  @relation(fields: [lawyer_id], references: [user_id]) // Relación con el abogado
}

enum user_role {
  CLIENT // Usuario con rol de cliente
  LAWYER // Usuario con rol de abogado
  ADMIN  // Usuario con rol de administrador
}