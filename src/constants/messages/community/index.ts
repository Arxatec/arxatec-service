export const COMMUNITY_MESSAGES = {
  // community
  COMMUNITY_ERROR_REQUIRED_NAME: "The key name is required",
  COMMUNITY_ERROR_INVALID_NAME_MIN_LENGTH: "The key name must be at least 1 character long",
  COMMUNITY_ERROR_NOT_FOUND: "Community not found",
  COMMUNITY_ERROR_CREATING: "Error creating community",
  COMMUNITY_ERROR_UPDATING: "Error updating community",
  COMMUNITY_ERROR_DELETING: "Error deleting community",
  COMMUNITY_ERROR_ACCESS_DENIED: "Access denied or insufficient permissions",
  COMMUNITY_ERROR_FETCHING: "Error fetching communities",
  COMMUNITY_SUCCESS_CREATED: "The community has been successfully created",
  COMMUNITY_SUCCESS_UPDATED: "The community has been successfully updated",
  COMMUNITY_SUCCESS_DELETED: "The community has been successfully deleted",
  COMMUNITY_SUCCESS_RETRIEVED: "Community retrieved successfully",
  COMMUNITY_SUCCESS_LIST_RETRIEVED: "Communities retrieved successfully",
  COMMUNITY_SUCCESS_JOINED: "User joined the community successfully",

  // publication
  PUBLICATION_ERROR_REQUIRED_TITLE: "The key title is required",
  PUBLICATION_ERROR_INVALID_TITLE_MIN_LENGTH: "The key title must be at least 1 character long",
  PUBLICATION_ERROR_REQUIRED_DESCRIPTION: "The key description is required",
  PUBLICATION_ERROR_INVALID_DESCRIPTION_MIN_LENGTH: "The key description must be at least 1 character long",
  PUBLICATION_ERROR_NOT_FOUND: "Publication not found",
  PUBLICATION_ERROR_CREATING: "Error creating publication",
  PUBLICATION_ERROR_UPDATING: "Error updating publication",
  PUBLICATION_ERROR_DELETING: "Error deleting publication",
  PUBLICATION_ERROR_ACCESS_DENIED: "Access denied or insufficient permissions",
  PUBLICATION_ERROR_LISTING: "Error fetching publications",
  PUBLICATION_SUCCESS_CREATED: "The publication has been successfully created",
  PUBLICATION_SUCCESS_UPDATED: "The publication has been successfully updated",
  PUBLICATION_SUCCESS_DELETED: "The publication has been successfully deleted",
  PUBLICATION_SUCCESS_RETRIEVED: "Publication retrieved successfully",
  PUBLICATION_SUCCESS_LIST_RETRIEVED: "Publications retrieved successfully",

  // comment
  COMMENT_ERROR_REQUIRED_COMMENT: "The comment key is required",
  COMMENT_ERROR_INVALID_COMMENT_MIN_LENGTH: "The comment must be at least 1 character long",
  COMMENT_ERROR_NOT_FOUND: "Comment not found",
  COMMENT_ERROR_CREATING: "Error creating comment",
  COMMENT_ERROR_UPDATING: "Error updating comment",
  COMMENT_ERROR_DELETING: "Error deleting comment",
  COMMENT_ERROR_ACCESS_DENIED: "Access denied or insufficient permissions",
  COMMENT_ERROR_LISTING: "Error fetching comments",
  COMMENT_SUCCESS_CREATED: "The comment has been successfully created",
  COMMENT_SUCCESS_UPDATED: "The comment has been successfully updated",
  COMMENT_SUCCESS_DELETED: "The comment has been successfully deleted",
  COMMENT_SUCCESS_RETRIEVED: "Comment retrieved successfully",
  COMMENT_SUCCESS_LIST_RETRIEVED: "Comments retrieved successfully",

  // comment reply
  COMMENT_REPLY_ERROR_REQUIRED_REPLY: "The reply key is required",
  COMMENT_REPLY_ERROR_INVALID_REPLY_MIN_LENGTH: "The reply must be at least 1 character long",
  COMMENT_REPLY_ERROR_NOT_FOUND: "Reply not found",
  COMMENT_REPLY_ERROR_CREATING: "Error creating reply",
  COMMENT_REPLY_ERROR_UPDATING: "Error updating reply",
  COMMENT_REPLY_ERROR_DELETING: "Error deleting reply",
  COMMENT_REPLY_ERROR_ACCESS_DENIED: "Access denied or insufficient permissions",
  COMMENT_REPLY_ERROR_LISTING: "Error fetching replies",
  COMMENT_REPLY_SUCCESS_CREATED: "The reply has been successfully created",
  COMMENT_REPLY_SUCCESS_UPDATED: "The reply has been successfully updated",
  COMMENT_REPLY_SUCCESS_DELETED: "The reply has been successfully deleted",
  COMMENT_REPLY_SUCCESS_RETRIEVED: "Reply retrieved successfully",
  COMMENT_REPLY_SUCCESS_LIST_RETRIEVED: "Replies retrieved successfully"
};
